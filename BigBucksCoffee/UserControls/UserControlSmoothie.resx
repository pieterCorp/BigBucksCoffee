<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        is02ReSCCkgMSnGiUEEAH3I+ZRIIIA//2Q==
</value>
  </data>
</root>